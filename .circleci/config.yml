version: 2.1

jobs:
  build:
    docker:
      - image: unityci/editor:2022.3.32f1-android-3
    environment:
      UNITY_LICENSE: $UNITY_LICENSE 
    steps:
      - checkout

      # Vérification de l'installation de Unity
      - run:
          name: Vérification de la présence de Unity
          command: ls -la /opt/unity/Editor/ || echo "Unity n'est pas installé !"

     #  Vérification que l'exécutable Unity est bien accessible
      - run:
          name: Vérification de l'exécutable Unity
          command: |
              if [ ! -f "/opt/unity/Editor/Unity" ]; then
                echo "L'exécutable Unity n'existe pas !"
                exit 1
              fi

       #  Donner les permissions d'exécution à Unity
      - run:
          name: Donner les permissions à Unity
          command: chmod +x /opt/unity/Editor/Unity

      # Vérification du contenu du répertoire
      - run:
          name: Vérification des fichiers du projet
          command: ls -la $(pwd)

      # Vérification que le fichier BuildScript.cs est bien présent
      - run:
          name: Vérification du script de build Unity
           command: |
              if [ ! -f "$(pwd)/Assets/Editor/BuildScript.cs" ]; then
                echo "Le fichier BuildScript.cs est introuvable !"
                exit 1
              fi

      - run:
          name: Vérification de la variable UNITY_LICENSE
          command: |
            if [ -z "$UNITY_LICENSE" ]; then
              echo "❌ UNITY_LICENSE n'est pas défini !"
              exit 1
            else
              echo "✅ UNITY_LICENSE est défini."
              echo "$UNITY_LICENSE" | head -c 50  # Affiche les 50 premiers caractères pour vérifier
            fi

      - run:
          name: Vérification du format de UNITY_LICENSE
          command: |
            echo "Longueur de UNITY_LICENSE : $(echo -n "$UNITY_LICENSE" | wc -c)"
            echo "$UNITY_LICENSE" | base64 --decode &> /dev/null
            if [ $? -ne 0 ]; then
              echo "❌ UNITY_LICENSE semble mal encodé en Base64 !"
              exit 1
            else
              echo "✅ UNITY_LICENSE est bien encodé en Base64."
            fi

      - run:
          name: Vérification de la variable UNITY_LICENSE
          command: echo "$UNITY_LICENSE"

      - run:
          name: Test de décodage de la licence
          command: echo "$UNITY_LICENSE" | base64 --decode || echo "Erreur de décodage !"
    

      # Configuration de la licence Unity
      - run:
          name: Configurer la licence Unity
          command: |
            mkdir -p /root/.local/share/unity3d/Unity/
            echo -e "$UNITY_LICENSE" | base64 --decode > /root/.local/share/unity3d/Unity/Unity_lic.ulf
            chmod 777 /root/.local/share/unity3d/Unity/Unity_lic.ulf

      - run:
          name: Vérifier la licence Unity
          command: cat /root/.local/share/unity3d/Unity/Unity_lic.ulf || echo "Licence introuvable !"

      # Lancer la build Unity
      - run:
          name: Lancer la build Unity
          command: |
            /opt/unity/Editor/Unity -batchmode -nographics -quit \
            -projectPath $(pwd) -executeMethod BuildScript.PerformBuild \
            -logFile logs/build.log || echo "Échec de la build Unity."

      # Vérification des logs Unity
      - run:
          name: Affichage des logs Unity
          command: cat logs/build.log || echo "Le fichier de log est introuvable."

      # Vérifier si la build a été créée
      - run:
          name: Vérifier si la build a été créée
          command: |
            if [ -d "$(pwd)/Builds" ]; then
              echo "La build a été créée avec succès."
            else
              echo "Le dossier Builds est vide ou n'existe pas."
              exit 1
            fi

      # Stockage des artifacts
      - store_artifacts:
          path: $(pwd)/Builds
          destination: build_output

workflows:
  version: 2
  build-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: develop
